{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\webSoft\\\\Desktop\\\\ba\\\\webBaView\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*global kakao*/\nimport React, { useState, useEffect } from \"react\";\nimport { Map, MapMarker, MapTypeId } from \"react-kakao-maps-sdk\";\nimport PopupView from \"./PopupView\";\nimport axios from 'axios';\n\n//분리\nimport { positions } from \"./data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const mapTypeIds = [kakao.maps.MapTypeId.BICYCLE];\n  const [mapAddress, setMapAddress] = useState(null);\n  const [mapText, setMapText] = useState(null);\n  // const [mapWidth, setMapWidth] = useState(\"0\");\n  const [mapCenterLat, setMapCenterLat] = useState(null);\n  const [mapCenterLng, setMapCenterLng] = useState(null);\n  const [mapTitle, setMapTitle] = useState(null);\n  const [mapImgs, setMapImgs] = useState(null);\n  // 클릭한 마커 정보를 저장할 상태 추가\n\n  const [latPosition, setLatPosition] = useState(null);\n  const [lngPosition, setLngPosition] = useState(null);\n\n  //팝업 화면 보임/숨김 여부\n  const [isPopupVisible, setPopupVisible] = useState(false);\n\n  // 타슈\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setLatPosition(latitude);\n        setLngPosition(longitude);\n      }, error => {\n        console.error(\"현재 위치를 가져오는 중 에러 발생:\", error);\n      });\n    } else {\n      console.error(\"이 브라우저에서는 Geolocation을 지원하지 않습니다.\");\n    }\n    const fetchData = async () => {\n      try {\n        // API 엔드포인트 URL\n        const apiUrl = \"http://localhost:3000\"; // 여기에 백엔드 서버의 URL을 넣어주세요.\n\n        // Axios를 사용하여 데이터 가져오기\n        const response = await axios.get(apiUrl);\n\n        // 가져온 데이터 설정\n        setData(response.data.data);\n\n        // 로딩 상태 업데이트\n        setLoading(false);\n      } catch (error) {\n        // 에러 발생 시 처리\n        setError(error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 마커를 클릭할 때 호출되는 함수\n  const handleMarkerClick = (mlat, mlng, title, imgs, address, text) => {\n    // 클릭한 마커의 정보를 상단에 표시하고, 해당 마커의 좌표로 지도의 중심 좌표를 설정\n    setMapCenterLat(mlat);\n    setMapCenterLng(mlng);\n    setMapTitle(title);\n    setMapAddress(address);\n    setMapText(text);\n    // setMapWidth(\"95%\");\n    setMapImgs(imgs.split(\"@\"));\n    setPopupVisible(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100vh\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Map, {\n      center: {\n        lat: mapCenterLat === null ? latPosition : mapCenterLat,\n        lng: mapCenterLng === null ? lngPosition : mapCenterLng\n      },\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        zIndex: 0\n      },\n      level: 3,\n      children: [latPosition !== null && lngPosition !== null && /*#__PURE__*/_jsxDEV(MapMarker, {\n        position: {\n          lat: latPosition,\n          lng: lngPosition\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), data.map((item, index) => {\n        console.log(item);\n        return /*#__PURE__*/_jsxDEV(MapMarker, {\n          position: {\n            lat: item.x_pos,\n            lng: item.y_pos\n          },\n          image: {\n            src: \"https://upload.wikimedia.org/wikipedia/commons/5/55/BicycleMarkerSymbol.png\",\n            size: {\n              width: 36,\n              height: 47\n            }\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }, this);\n      }), positions.map((position, index) => /*#__PURE__*/_jsxDEV(MapMarker, {\n        position: position.latlng,\n        image: {\n          src: position.img,\n          size: {\n            width: 250,\n            height: 139\n          }\n        },\n        onClick: () => handleMarkerClick(position.latlng.lat, position.latlng.lng, position.title, position.imgs, position.address, position.text),\n        title: position.title\n      }, `${position.title}-${position.latlng}-${position.img}-${position.imgs}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)), mapTypeIds.map(mapTypeId => /*#__PURE__*/_jsxDEV(MapTypeId, {\n        type: mapTypeId\n      }, mapTypeId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopupView, {\n      style: {\n        position: \"absolute\",\n        bottom: \"1.5rem\",\n        width: \"94%\",\n        left: \"3%\",\n        height: \"43%\"\n      },\n      title: mapTitle,\n      images: mapImgs,\n      address: mapAddress,\n      description: mapText,\n      isVisible: isPopupVisible,\n      onCloseClicked: () => setPopupVisible(s => !s)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"mFzLYY3Vg6p+t4PsizdMIx2eBdI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Map","MapMarker","MapTypeId","PopupView","axios","positions","jsxDEV","_jsxDEV","App","_s","mapTypeIds","kakao","maps","BICYCLE","mapAddress","setMapAddress","mapText","setMapText","mapCenterLat","setMapCenterLat","mapCenterLng","setMapCenterLng","mapTitle","setMapTitle","mapImgs","setMapImgs","latPosition","setLatPosition","lngPosition","setLngPosition","isPopupVisible","setPopupVisible","data","setData","loading","setLoading","error","setError","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","console","fetchData","apiUrl","response","get","children","fileName","_jsxFileName","lineNumber","columnNumber","message","handleMarkerClick","mlat","mlng","title","imgs","address","text","split","style","width","height","center","lat","lng","zIndex","level","map","item","index","log","x_pos","y_pos","image","src","size","latlng","img","onClick","mapTypeId","type","bottom","left","images","description","isVisible","onCloseClicked","s","_c","$RefreshReg$"],"sources":["C:/Users/webSoft/Desktop/ba/webBaView/src/App.js"],"sourcesContent":["/*global kakao*/\r\nimport React, { useState,useEffect } from \"react\";\r\nimport { Map, MapMarker, MapTypeId, } from \"react-kakao-maps-sdk\";\r\nimport PopupView from \"./PopupView\";\r\nimport axios from 'axios';\r\n\r\n//분리\r\nimport { positions } from \"./data\"\r\n\r\nconst App = () => {\r\n  \r\n  const mapTypeIds = [kakao.maps.MapTypeId.BICYCLE];\r\n  const [mapAddress, setMapAddress] = useState(null);\r\n  const [mapText, setMapText] = useState(null);\r\n  // const [mapWidth, setMapWidth] = useState(\"0\");\r\n  const [mapCenterLat, setMapCenterLat] = useState(null);\r\n  const [mapCenterLng, setMapCenterLng] = useState(null);\r\n  const [mapTitle, setMapTitle] = useState(null);\r\n  const [mapImgs, setMapImgs] = useState(null);\r\n  // 클릭한 마커 정보를 저장할 상태 추가\r\n\r\n  const [latPosition, setLatPosition] = useState(null);\r\n  const [lngPosition, setLngPosition] = useState(null);\r\n\r\n  //팝업 화면 보임/숨김 여부\r\n  const [isPopupVisible, setPopupVisible] = useState(false);\r\n\r\n  // 타슈\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          setLatPosition(latitude);\r\n          setLngPosition(longitude);\r\n        },\r\n        (error) => {\r\n          console.error(\"현재 위치를 가져오는 중 에러 발생:\", error);\r\n        }\r\n      );\r\n    } else {\r\n      console.error(\"이 브라우저에서는 Geolocation을 지원하지 않습니다.\");\r\n    }\r\n    const fetchData = async () => {\r\n      try {\r\n        // API 엔드포인트 URL\r\n        const apiUrl = \"http://localhost:3000\"; // 여기에 백엔드 서버의 URL을 넣어주세요.\r\n\r\n        // Axios를 사용하여 데이터 가져오기\r\n        const response = await axios.get(apiUrl);\r\n\r\n        // 가져온 데이터 설정\r\n        setData(response.data.data);\r\n\r\n        // 로딩 상태 업데이트\r\n        setLoading(false);\r\n        \r\n      } catch (error) {\r\n        // 에러 발생 시 처리\r\n        setError(error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n\r\n\r\n\r\n  // 마커를 클릭할 때 호출되는 함수\r\n  const handleMarkerClick = (mlat, mlng, title, imgs, address, text) => {\r\n    // 클릭한 마커의 정보를 상단에 표시하고, 해당 마커의 좌표로 지도의 중심 좌표를 설정\r\n    setMapCenterLat(mlat);\r\n    setMapCenterLng(mlng);\r\n    setMapTitle(title);\r\n    setMapAddress(address);\r\n    setMapText(text);\r\n    // setMapWidth(\"95%\");\r\n    setMapImgs(imgs.split(\"@\"));\r\n    setPopupVisible(true);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <Map\r\n        center={{ lat: mapCenterLat === null ? latPosition : mapCenterLat , lng : mapCenterLng === null ? lngPosition : mapCenterLng}}\r\n        style={{ width: \"100%\", height: \"100%\", zIndex: 0 }}\r\n        level={3}\r\n      >\r\n        {latPosition !== null && lngPosition !== null && (\r\n          <MapMarker position={{ lat: latPosition, lng: lngPosition }} />\r\n        )}\r\n\r\n        {data.map((item,index) => {\r\n          console.log(item);\r\n          return (<MapMarker\r\n          key = {index}\r\n          position={{lat: item.x_pos, lng: item.y_pos}}\r\n          image = {{\r\n            src: \"https://upload.wikimedia.org/wikipedia/commons/5/55/BicycleMarkerSymbol.png\",\r\n            size: {\r\n              width: 36,\r\n              height: 47,\r\n            },\r\n          }}/> );\r\n        })}\r\n      \r\n        {positions.map((position, index) => (\r\n          <MapMarker\r\n          key={`${position.title}-${position.latlng}-${position.img}-${position.imgs}`}\r\n          position={position.latlng}\r\n          image={{\r\n            src: position.img,\r\n            size: {\r\n              width: 250,\r\n              height: 139,\r\n            },\r\n            \r\n          }}\r\n          onClick={() =>\r\n            handleMarkerClick(\r\n              position.latlng.lat,\r\n              position.latlng.lng,\r\n              position.title,\r\n              position.imgs,\r\n              position.address,\r\n              position.text\r\n              )\r\n            }\r\n            title={position.title}\r\n            ></MapMarker>\r\n            ))}\r\n\r\n        {mapTypeIds.map((mapTypeId) => (\r\n          <MapTypeId key={mapTypeId} type={mapTypeId} />\r\n          ))}\r\n      </Map>\r\n\r\n      <PopupView\r\n        style={{\r\n          position: \"absolute\",\r\n          bottom: \"1.5rem\",\r\n          width: \"94%\",\r\n          left: \"3%\",\r\n          height: \"43%\"\r\n        }}\r\n        title={mapTitle}\r\n        images={mapImgs}\r\n        address={mapAddress}\r\n        description={mapText}\r\n        isVisible={isPopupVisible}\r\n        onCloseClicked={() => setPopupVisible(s => !s)}\r\n       />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}