{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\webSoft\\\\Desktop\\\\ba\\\\webBaView\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*global kakao*/\nimport React, { useState, useEffect } from \"react\";\nimport { Map, MapMarker, MapTypeId } from \"react-kakao-maps-sdk\";\nimport PopupView from \"./PopupView\";\nimport axios from 'axios';\n\n//분리\nimport { positions } from \"./data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const mapTypeIds = [kakao.maps.MapTypeId.BICYCLE];\n  const [mapAddress, setMapAddress] = useState(null);\n  const [mapText, setMapText] = useState(null);\n  // const [mapWidth, setMapWidth] = useState(\"0\");\n  const [mapCenterLat, setMapCenterLat] = useState(null);\n  const [mapCenterLng, setMapCenterLng] = useState(null);\n  const [mapTitle, setMapTitle] = useState(null);\n  const [mapImgs, setMapImgs] = useState(null);\n  // 클릭한 마커 정보를 저장할 상태 추가\n\n  const [latPosition, setLatPosition] = useState(null);\n  const [lngPosition, setLngPosition] = useState(null);\n\n  //팝업 화면 보임/숨김 여부\n  const [isPopupVisible, setPopupVisible] = useState(false);\n  const [tashuData, setTashuData] = useState(null);\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setLatPosition(latitude);\n        setLngPosition(longitude);\n      }, error => {\n        console.error(\"현재 위치를 가져오는 중 에러 발생:\", error);\n      });\n    } else {\n      console.error(\"이 브라우저에서는 Geolocation을 지원하지 않습니다.\");\n    }\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://bikeapp.tashu.or.kr:50041/v1/openapi/station', {\n          headers: {\n            'api-token': '6o731grdf8u49l4p'\n          }\n        });\n        if (response.status === 200) {\n          setTashuData(response.data.results);\n          console.log(response.data.results);\n        } else {\n          console.error('API 요청이 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('API 요청 중 오류가 발생했습니다.', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // 마커를 클릭할 때 호출되는 함수\n  const handleMarkerClick = (mlat, mlng, title, imgs, address, text) => {\n    // 클릭한 마커의 정보를 상단에 표시하고, 해당 마커의 좌표로 지도의 중심 좌표를 설정\n    setMapCenterLat(mlat);\n    setMapCenterLng(mlng);\n    setMapTitle(title);\n    setMapAddress(address);\n    setMapText(text);\n    // setMapWidth(\"95%\");\n    setMapImgs(imgs.split(\"@\"));\n    setPopupVisible(true);\n  };\n  console.log(tashuData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100vh\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Map, {\n      center: {\n        lat: mapCenterLat === null ? latPosition : mapCenterLat,\n        lng: mapCenterLng === null ? lngPosition : mapCenterLng\n      },\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        zIndex: 0\n      },\n      level: 3,\n      children: [latPosition !== null && lngPosition !== null && /*#__PURE__*/_jsxDEV(MapMarker, {\n        position: {\n          lat: latPosition,\n          lng: lngPosition\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), positions.map((position, index) => /*#__PURE__*/_jsxDEV(MapMarker, {\n        position: position.latlng,\n        image: {\n          src: position.img,\n          size: {\n            width: 180,\n            height: 100\n          }\n        },\n        onClick: () => handleMarkerClick(position.latlng.lat, position.latlng.lng, position.title, position.imgs, position.address, position.text),\n        title: position.title\n      }, `${position.title}-${position.latlng}-${position.img}-${position.imgs}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)), mapTypeIds.map(mapTypeId => /*#__PURE__*/_jsxDEV(MapTypeId, {\n        type: mapTypeId\n      }, mapTypeId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopupView, {\n      style: {\n        position: \"absolute\",\n        bottom: \"1.5rem\",\n        width: \"94%\",\n        left: \"3%\",\n        height: \"43%\"\n      },\n      title: mapTitle,\n      images: mapImgs,\n      address: mapAddress,\n      description: mapText,\n      isVisible: isPopupVisible,\n      onCloseClicked: () => setPopupVisible(s => !s)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7N8rLfpri3vvs1n1jQXZsnrpjKg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Map","MapMarker","MapTypeId","PopupView","axios","positions","jsxDEV","_jsxDEV","App","_s","mapTypeIds","kakao","maps","BICYCLE","mapAddress","setMapAddress","mapText","setMapText","mapCenterLat","setMapCenterLat","mapCenterLng","setMapCenterLng","mapTitle","setMapTitle","mapImgs","setMapImgs","latPosition","setLatPosition","lngPosition","setLngPosition","isPopupVisible","setPopupVisible","tashuData","setTashuData","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","error","console","fetchData","response","get","headers","status","data","results","log","handleMarkerClick","mlat","mlng","title","imgs","address","text","split","style","width","height","children","center","lat","lng","zIndex","level","fileName","_jsxFileName","lineNumber","columnNumber","map","index","latlng","image","src","img","size","onClick","mapTypeId","type","bottom","left","images","description","isVisible","onCloseClicked","s","_c","$RefreshReg$"],"sources":["C:/Users/webSoft/Desktop/ba/webBaView/src/App.js"],"sourcesContent":["/*global kakao*/\r\nimport React, { useState,useEffect } from \"react\";\r\nimport { Map, MapMarker, MapTypeId, } from \"react-kakao-maps-sdk\";\r\nimport PopupView from \"./PopupView\";\r\nimport axios from 'axios';\r\n\r\n//분리\r\nimport { positions } from \"./data\"\r\n\r\nconst App = () => {\r\n  \r\n  const mapTypeIds = [kakao.maps.MapTypeId.BICYCLE];\r\n  const [mapAddress, setMapAddress] = useState(null);\r\n  const [mapText, setMapText] = useState(null);\r\n  // const [mapWidth, setMapWidth] = useState(\"0\");\r\n  const [mapCenterLat, setMapCenterLat] = useState(null);\r\n  const [mapCenterLng, setMapCenterLng] = useState(null);\r\n  const [mapTitle, setMapTitle] = useState(null);\r\n  const [mapImgs, setMapImgs] = useState(null);\r\n  // 클릭한 마커 정보를 저장할 상태 추가\r\n\r\n  const [latPosition, setLatPosition] = useState(null);\r\n  const [lngPosition, setLngPosition] = useState(null);\r\n\r\n  //팝업 화면 보임/숨김 여부\r\n  const [isPopupVisible, setPopupVisible] = useState(false);\r\n  const [tashuData, setTashuData] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          setLatPosition(latitude);\r\n          setLngPosition(longitude);\r\n        },\r\n        (error) => {\r\n          console.error(\"현재 위치를 가져오는 중 에러 발생:\", error);\r\n        }\r\n      );\r\n    } else {\r\n      console.error(\"이 브라우저에서는 Geolocation을 지원하지 않습니다.\");\r\n    }\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('https://bikeapp.tashu.or.kr:50041/v1/openapi/station', {\r\n          headers: {\r\n            'api-token': '6o731grdf8u49l4p'\r\n          }\r\n        });\r\n        if (response.status === 200) {\r\n          setTashuData(response.data.results);\r\n          console.log(response.data.results);\r\n        } else {\r\n          console.error('API 요청이 실패했습니다.');\r\n        }\r\n      } catch (error) {\r\n         console.error('API 요청 중 오류가 발생했습니다.', error);\r\n       }\r\n     };\r\n\r\n     fetchData();\r\n  }, []);\r\n\r\n\r\n  // 마커를 클릭할 때 호출되는 함수\r\n  const handleMarkerClick = (mlat, mlng, title, imgs, address, text) => {\r\n    // 클릭한 마커의 정보를 상단에 표시하고, 해당 마커의 좌표로 지도의 중심 좌표를 설정\r\n    setMapCenterLat(mlat);\r\n    setMapCenterLng(mlng);\r\n    setMapTitle(title);\r\n    setMapAddress(address);\r\n    setMapText(text);\r\n    // setMapWidth(\"95%\");\r\n    setMapImgs(imgs.split(\"@\"));\r\n    setPopupVisible(true);\r\n  };\r\n\r\n  console.log(tashuData);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <Map\r\n        center={{ lat: mapCenterLat === null ? latPosition : mapCenterLat , lng : mapCenterLng === null ? lngPosition : mapCenterLng}}\r\n        style={{ width: \"100%\", height: \"100%\", zIndex: 0 }}\r\n        level={3}\r\n      >\r\n        {latPosition !== null && lngPosition !== null && (\r\n          <MapMarker position={{ lat: latPosition, lng: lngPosition }} />\r\n        )}\r\n\r\n        {positions.map((position, index) => (\r\n          <MapMarker\r\n          key={`${position.title}-${position.latlng}-${position.img}-${position.imgs}`}\r\n          position={position.latlng}\r\n          image={{\r\n            src: position.img,\r\n            size: {\r\n              width: 180,\r\n              height: 100,\r\n            },\r\n            \r\n          }}\r\n          onClick={() =>\r\n            handleMarkerClick(\r\n              position.latlng.lat,\r\n              position.latlng.lng,\r\n              position.title,\r\n              position.imgs,\r\n              position.address,\r\n              position.text\r\n              )\r\n            }\r\n            title={position.title}\r\n            ></MapMarker>\r\n            ))}\r\n\r\n        {mapTypeIds.map((mapTypeId) => (\r\n          <MapTypeId key={mapTypeId} type={mapTypeId} />\r\n          ))}\r\n      </Map>\r\n\r\n      <PopupView\r\n        style={{\r\n          position: \"absolute\",\r\n          bottom: \"1.5rem\",\r\n          width: \"94%\",\r\n          left: \"3%\",\r\n          height: \"43%\"\r\n        }}\r\n        title={mapTitle}\r\n        images={mapImgs}\r\n        address={mapAddress}\r\n        description={mapText}\r\n        isVisible={isPopupVisible}\r\n        onCloseClicked={() => setPopupVisible(s => !s)}\r\n       />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}